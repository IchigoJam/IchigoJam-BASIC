POKE
0.9.8〜
-----------------------------------------------------------
[ 機能 ]
仮想アドレス領域に値を入れます。

[ コマンド 書式 ]
POKE <番地>,<値>[,<値>][,...]

[ 例 ]
POKE #E0*8,#FF
POKE #E0*8,#FF,#81,#81,#81,#81,#81,#81,#FF

POKE #700,#01,#1C,#00,#20,#40,#18,#01,#39,#FC,#D1,#70,#47

[ 解説 ]
<番地> は #700〜#FFF、<値> は #00〜#FF で、
<値> は連続して記載が可能です。

下記は 0.9.9-RC6 以降で有効になります。
それ以前ではキャラクターパターンなど一部が有効です。

キャラクターパターンの変更は <番地> #700〜#7FF で対応します。
（#000〜#6FF は変更できません）
キャラクターコード 224（#E0）〜255（#FF）を変更できます。
キャラクターコード番号×8から8つの番地（+0〜+7）が1文字で構成されます。
番地の若い順に上から入っています。

配列および変数が <番地> #800〜#8FF に対応します。
下位8ビット・上位8ビットの順で、一番上位のビットが符号ビットです。
#800〜#801 が [0]、#802〜#803 が [1] ……とつづき、#8CA〜#8CB の [101] まで、
つづいて #8CC〜#8CD が変数 A から変数がつづき、#8FE〜#8FF の変数 Z となります。

画面表示のキャラクターが #900〜#BFF に対応します。
#900 が横座標 0、縦座標 0 のキャラクターコード、そこから横につづき、
#BFF の横座標 31、縦座標 23 までです。
この領域を更新する場合、PRINT とは異なり、シリアルには出力されません。

プログラムが #C00〜#FFF に対応します。
行番号 2 番地分(下位8ビット・上位8ビットの順)、
文字数 1 番地分(終了コード 0 を含む) の後
行番号を除いたプログラムそのものが入ります。
行の終了コードとして 0 が入ります。(2文字入るようです)

ARM Cortex-M0 によるマシン語も対応しています。USR で実行できます。
領域は変更できるキャラクタパターン、配列・変数、
プログラムの空き領域部分を用いて下さい。
